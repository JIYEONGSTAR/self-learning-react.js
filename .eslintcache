[{"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\index.js":"1","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\App.js":"2","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\utils\\paginate.js":"3","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\Movie.js":"4","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\MovieTable.js":"5","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\common\\Pagination.js":"6","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\utils\\Paginate.js":"7","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\Navbar.js":"8","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\Home.js":"9","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\UserPage.js":"10","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\MoviePage.js":"11","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\User.js":"12","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\CardItem.js":"13","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\Login.js":"14","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\ProfileIMG.js":"15","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\MyInformation.js":"16"},{"size":223,"mtime":1608555712230,"results":"17","hashOfConfig":"18"},{"size":740,"mtime":1608464125382,"results":"19","hashOfConfig":"18"},{"size":350,"mtime":1607752477759,"results":"20","hashOfConfig":"21"},{"size":4197,"mtime":1608552921944,"results":"22","hashOfConfig":"18"},{"size":1443,"mtime":1608555380363,"results":"23","hashOfConfig":"18"},{"size":1375,"mtime":1608217790384,"results":"24","hashOfConfig":"18"},{"size":350,"mtime":1607793585881,"results":"25","hashOfConfig":"18"},{"size":798,"mtime":1608555400345,"results":"26","hashOfConfig":"18"},{"size":153,"mtime":1608464320920,"results":"27","hashOfConfig":"18"},{"size":182,"mtime":1608461622859,"results":"28","hashOfConfig":"18"},{"size":184,"mtime":1608292921710,"results":"29","hashOfConfig":"18"},{"size":742,"mtime":1608562069160,"results":"30","hashOfConfig":"18"},{"size":414,"mtime":1608463676262,"results":"31","hashOfConfig":"18"},{"size":169,"mtime":1608464290278,"results":"32","hashOfConfig":"18"},{"size":1093,"mtime":1608561571892,"results":"33","hashOfConfig":"18"},{"size":480,"mtime":1608562019242,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"xjfisq",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ts1z8",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\index.js",[],["72","73"],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\App.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\utils\\paginate.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\Movie.js",["74","75"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport MovieTable from './MovieTable';\r\nimport { paginate } from './utils/Paginate';\r\nimport { Pagination } from './common/Pagination';\r\nimport _ from 'lodash';\r\n\r\nexport class Movie extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        movies: [],\r\n        value: \"\",\r\n        pageSize:10,\r\n        currentPage:1,\r\n        path: \"title\", \r\n        order: \"asc\" //asc, desc\r\n    };\r\n//검색어로 데이터 가져올 때 <b>\"검색어\"</b>이렇게되서 제목으로 필터링할때 검색어가 첫 단어일 경우 제일 먼저 나온다. 이건 뭐 어쩔 수 없다. \r\n    getSearchMovie = async () => {\r\n        console.log('search Movie');\r\n        const ID_KEY = 'lmnnx8RRbuqvKHD3QC_X';\r\n        const SECRET_KEY='SFUhgfJCLl';\r\n        const search = this.state.value;\r\n\r\n        try {\r\n            if (search === \"\") {\r\n                this.setState({movies: [], isLoading: true})\r\n            } else {\r\n                 const {data: { \r\n                     items \r\n                    }} = await axios.get('/v1/search/movie.json',{ \r\n                        params:{ \r\n                            query: search, \r\n                            display: 100\r\n                        }, \r\n                        headers: {\r\n                             'X-Naver-Client-Id': ID_KEY,\r\n                             'X-Naver-Client-Secret': SECRET_KEY \r\n                            } }); \r\n                            this.setState({movies: items, isLoading: false}); \r\n                        }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSearchMovie();// this.setState({movies: items, isLoading: false}) 이 코드가 있기에 가능함\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({value: e.target.value});\r\n        this.getSearchMovie();\r\n    }\r\n   \r\n    handlePageChange = (page)=>{\r\n        this.setState({currentPage:page});\r\n    }\r\n\r\n    handleSort = (e) =>{\r\n        const {movies,path,order,currentPage}=this.state;\r\n        const desc = \"desc\";\r\n        const asc = \"asc\";\r\n        if(order === \"asc\"?this.setState({order:desc}):this.setState({order:asc}));\r\n        const sorted = _.orderBy(movies,[path],[order]);\r\n        this.setState({movies:sorted,currentPage:1});\r\n    }\r\n    getData = () =>{\r\n        const{\r\n            pageSize,currentPage,movies\r\n        }=this.state;\r\n        const pagedMovies = paginate(movies,currentPage,pageSize);\r\n        return {count : movies.length,data:pagedMovies}\r\n    }\r\n    render() {\r\n        const {isLoading,pageSize,currentPage,value} = this.state;\r\n        const {count,data}=this.getData();\r\n        return (\r\n            <>\r\n            <form \r\n            onSubmit={this.handleSubmit}>\r\n                                <div>\r\n                                <h1>영화검색</h1>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.value}\r\n                                    // onChange={this.handleChange}\r\n                                    placeholder=\"영화를 입력해보세요\"/>\r\n                                    </div>\r\n                                    </form>\r\n                {\r\n                    isLoading\r\n                        ? (<span>검색중~~</span>)\r\n                        : (<div>\r\n                                    <div>\r\n                                        <MovieTable data={data} onSortPage={this.handleSort}/>\r\n                                        <Pagination\r\n                                        itemsCount = {count}\r\n                                        pageSize={pageSize}\r\n                                        currentPage={currentPage}\r\n                                        onPageChange={this.handlePageChange}\r\n                                        ></Pagination>\r\n                                    </div>\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie\r\n","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\MovieTable.js",["76"],"import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport '../css/MovieTable.css';\r\n\r\nfunction MovieTable(props) {\r\n    console.log(\"데이터 기져오기\");\r\n    return (\r\n        \r\n    <table>\r\n         <thead>\r\n                    <tr>\r\n                        <th>썸네일</th>\r\n                        <th onClick={()=>props.onSortPage('title')}>제목<i className=\"fas fa-sort\" /></th>\r\n                        <th>감독</th>\r\n                        <th>배우</th>\r\n                        <th>평점</th>\r\n                        <th>제작년도</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.data.map(m=>\r\n                    <tr>\r\n                    <td><img src={m.image}/></td>\r\n                    <td>{m.title.replace(/<b>/gi,\"\").replace(/<\\/b>/gi,\"\")}</td>\r\n                    <td>{m.director}</td>\r\n                    <td>{m.actor}</td>\r\n                    <td>{m.userRating}</td>\r\n                    <td>{m.pubDate}</td>\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n    </table>\r\n    )\r\n}\r\nMovieTable.propTypes = {\r\n    pubDate: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    userRating: PropTypes.string.isRequired,\r\n    director: PropTypes.string.isRequired,\r\n    actor: PropTypes.string.isRequired\r\n  };\r\nexport default MovieTable","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\common\\Pagination.js",["77"],"import React, {Component} from 'react'\r\nimport _ from \"lodash\";\r\n\r\nexport class Pagination extends Component {\r\n\r\n    render() {\r\n        // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n        const {itemsCount, pageSize, currentPage,onPageChange}=this.props;\r\n        const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n        if (pageCount === 1) \r\n            return null;\r\n        \r\n        const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination\">\r\n                    {\r\n                        pages.map(page => (\r\n                            <li\r\n                                key={page}\r\n                                className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n                                style={{\r\n                                    cursor: \"pointer\"\r\n                                }}>\r\n                                <a className=\"page-link\" onClick={()=>onPageChange(page)}>{page}</a>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\utils\\Paginate.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\Navbar.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\Home.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\UserPage.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\MoviePage.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\User.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\CardItem.js",["78"],"import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n    return (\r\n        <>\r\n            <Link to={props.path} className=\"card_item\">\r\n                <img className='card_img' src = 'https://www.poom.co.kr/Upload2/Product/201901/1901300532_detail1.jpg' />\r\n                <h2>{props.text}</h2>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardItem\r\n","C:\\Users\\JIYEONG\\Desktop\\movie\\src\\pages\\Login.js",[],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\ProfileIMG.js",["79","80"],"C:\\Users\\JIYEONG\\Desktop\\movie\\src\\components\\MyInformation.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":63,"column":34,"nodeType":"87","messageId":"88","endLine":63,"endColumn":45},{"ruleId":"85","severity":1,"message":"89","line":78,"column":47,"nodeType":"87","messageId":"88","endLine":78,"endColumn":52},{"ruleId":"90","severity":1,"message":"91","line":23,"column":25,"nodeType":"92","endLine":23,"endColumn":45},{"ruleId":"93","severity":1,"message":"94","line":25,"column":33,"nodeType":"92","endLine":25,"endColumn":91},{"ruleId":"90","severity":1,"message":"91","line":8,"column":17,"nodeType":"92","endLine":8,"endColumn":122},{"ruleId":"85","severity":1,"message":"95","line":4,"column":12,"nodeType":"87","messageId":"88","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":29,"column":42,"nodeType":"92","endLine":29,"endColumn":84},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'currentPage' is assigned a value but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'file' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]