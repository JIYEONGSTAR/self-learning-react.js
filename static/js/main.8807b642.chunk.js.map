{"version":3,"sources":["components/MovieTable.js","components/utils/Paginate.js","components/common/Pagination.js","components/Movie.js","App.js","index.js"],"names":["MovieTable","props","onClick","onSortPage","class","data","map","m","src","image","title","replace","director","actor","userRating","pubDate","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","value","Pagination","this","itemsCount","currentPage","onPageChange","pageCount","Math","ceil","pages","range","className","page","style","cursor","Component","Movie","state","isLoading","movies","path","order","getSearchMovie","a","console","log","ID_KEY","SECRET_KEY","search","setState","axios","get","params","query","display","headers","handleChange","e","target","handleSubmit","preventDefault","handlePageChange","handleSort","sorted","orderBy","getData","sortColumn","pagedMovies","count","length","onSubmit","type","onChange","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8807b642.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nfunction MovieTable(props) {\r\n    \r\n    return (\r\n    <table>\r\n         <thead>\r\n                    <tr>\r\n                        <th>썸네일</th>\r\n                        <th onClick={()=>props.onSortPage()}>제목<i class=\"fas fa-sort\" /></th>\r\n                        <th>감독</th>\r\n                        <th>배우</th>\r\n                        <th>평점</th>\r\n                        <th>제작년도</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.data.map(m=>\r\n                    <tr>\r\n                    <td><img src={m.image}/></td>\r\n                    <td>{m.title.replace(/<b>/gi,\"\").replace(/<\\/b>/gi,\"\")}</td>\r\n                    <td>{m.director}</td>\r\n                    <td>{m.actor}</td>\r\n                    <td>{m.userRating}</td>\r\n                    <td>{m.pubDate}</td>\r\n                    </tr>\r\n                    )}\r\n                    </tbody>\r\n    </table>\r\n    )\r\n}\r\nMovieTable.propTypes = {\r\n    pubDate: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    userRating: PropTypes.string.isRequired,\r\n    director: PropTypes.string.isRequired,\r\n    actor: PropTypes.string.isRequired\r\n  };\r\nexport default MovieTable","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber,pageSize){\r\n    const startIndex = (pageNumber -1)*pageSize;\r\n    \r\n    return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}","import React, {Component} from 'react'\r\nimport _ from \"lodash\";\r\n\r\nexport class Pagination extends Component {\r\n\r\n    render() {\r\n        // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n        const {itemsCount, pageSize, currentPage,onPageChange}=this.props;\r\n        const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n        if (pageCount === 1) \r\n            return null;\r\n        \r\n        const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination\">\r\n                    {\r\n                        pages.map(page => (\r\n                            <li\r\n                                key={page}\r\n                                className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n                                style={{\r\n                                    cursor: \"pointer\"\r\n                                }}>\r\n                                <a className=\"page-link\" onClick={()=>onPageChange(page)}>{page}</a>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport MovieTable from './MovieTable';\r\nimport { paginate } from './utils/Paginate';\r\nimport { Pagination } from './common/Pagination';\r\nimport _ from 'lodash';\r\n\r\nexport class Movie extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        movies: [],\r\n        value: \"\",\r\n        pageSize:10,\r\n        currentPage:1,\r\n        path: \"title\", order: \"asc\" //asc, desc\r\n    };\r\n\r\n    getSearchMovie = async () => {\r\n        console.log('search Movie');\r\n        const ID_KEY = 'lmnnx8RRbuqvKHD3QC_X';\r\n        const SECRET_KEY='SFUhgfJCLl';\r\n        const search = this.state.value;\r\n\r\n        try {\r\n            if (search === \"\") {\r\n                this.setState({movies: [], isLoading: false})\r\n            } else {\r\n                 const {data: { \r\n                     items \r\n                    }} = await axios.get('/v1/search/movie.json',{ \r\n                        params:{ \r\n                            query: search, \r\n                            display: 100 \r\n                        }, \r\n                        headers: {\r\n                             'X-Naver-Client-Id': ID_KEY,\r\n                             'X-Naver-Client-Secret': SECRET_KEY \r\n                            } }); \r\n                            this.setState({movies: items, isLoading: false}); \r\n                        }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSearchMovie();// this.setState({movies: items, isLoading: false}) 이 코드가 있기에 가능함\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({value: e.target.value});\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.getSearchMovie();\r\n    }\r\n   \r\n    handlePageChange = (page)=>{\r\n        this.setState({currentPage:page});\r\n    }\r\n\r\n    handleSort = () =>{\r\n        const {movies,path,order}=this.state;\r\n        const desc = \"desc\";\r\n        const asc = \"asc\";\r\n        if(order === \"asc\"?this.setState({order:desc}):this.setState({order:asc}));\r\n        const sorted = _.orderBy(movies,[path],[order]);\r\n        this.setState({movies:sorted});\r\n    }\r\n    getData = () =>{\r\n        const{\r\n            pageSize,currentPage,sortColumn,movies\r\n        }=this.state;\r\n        // const sorted = _.orderBy(movies,[sortColumn.path],[sortColumn.order]);\r\n        const pagedMovies = paginate(movies,currentPage,pageSize);\r\n        return {count : movies.length,data:pagedMovies}\r\n    }\r\n    render() {\r\n        const {isLoading,pageSize,currentPage} = this.state;\r\n        const {count,data}=this.getData();\r\n        return (\r\n            <>\r\n                {\r\n                    isLoading\r\n                        ? (<span>Loading...</span>)\r\n                        : (\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div>\r\n                                <h1>영화검색</h1>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"영화를 입력해보세요\"/>\r\n                                    </div>\r\n                                    <div>\r\n                                        <MovieTable data={data} onSortPage={this.handleSort}/>\r\n                                        <Pagination\r\n                                        itemsCount = {count}\r\n                                        pageSize={pageSize}\r\n                                        currentPage={currentPage}\r\n                                        onPageChange={this.handlePageChange}\r\n                                        ></Pagination>\r\n                                    </div>\r\n                            </form>\r\n                        )\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie\r\n","// import Navbar from 'components/Navbar';\n// import Home from 'pages/Home';\n// import UserPage from 'pages/UserPage';\nimport React from 'react';\n// import { Router } from 'react-router-dom';\nimport './App.css';\n// import { Search } from './components/Search';\nimport { Movie } from './components/Movie';\nfunction App() {\n  return (\n  <>\n  {/* <Router>\n  <Navbar />\n  <Switch>\n    <Route path ='/' exact component = {Home} />\n    <Route path ='/userpage' component = {UserPage} />\n    <Route path = '/movie' component = {}/>\n\n  </Switch>\n  </Router> */}\n  {/* <Search/> */}\n  <Movie />\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n    <App />  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}